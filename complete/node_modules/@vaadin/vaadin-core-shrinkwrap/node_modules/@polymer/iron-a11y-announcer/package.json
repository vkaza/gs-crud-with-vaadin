{
  "_args": [
    [
      {
        "raw": "@polymer/iron-a11y-announcer@https://registry.npmjs.org/@polymer/iron-a11y-announcer/-/iron-a11y-announcer-3.0.2.tgz",
        "scope": "@polymer",
        "escapedName": "@polymer%2firon-a11y-announcer",
        "name": "@polymer/iron-a11y-announcer",
        "rawSpec": "https://registry.npmjs.org/@polymer/iron-a11y-announcer/-/iron-a11y-announcer-3.0.2.tgz",
        "spec": "https://registry.npmjs.org/@polymer/iron-a11y-announcer/-/iron-a11y-announcer-3.0.2.tgz",
        "type": "remote"
      },
      "C:\\Users\\kazav\\Documents\\GitHub\\gs-crud-with-vaadin\\complete\\node_modules\\@vaadin\\vaadin-core-shrinkwrap"
    ]
  ],
  "_from": "@polymer/iron-a11y-announcer@https://registry.npmjs.org/@polymer/iron-a11y-announcer/-/iron-a11y-announcer-3.0.2.tgz",
  "_id": "@polymer/iron-a11y-announcer@3.0.2",
  "_inCache": true,
  "_location": "/@vaadin/vaadin-core-shrinkwrap/@polymer/iron-a11y-announcer",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@polymer/iron-a11y-announcer@https://registry.npmjs.org/@polymer/iron-a11y-announcer/-/iron-a11y-announcer-3.0.2.tgz",
    "scope": "@polymer",
    "escapedName": "@polymer%2firon-a11y-announcer",
    "name": "@polymer/iron-a11y-announcer",
    "rawSpec": "https://registry.npmjs.org/@polymer/iron-a11y-announcer/-/iron-a11y-announcer-3.0.2.tgz",
    "spec": "https://registry.npmjs.org/@polymer/iron-a11y-announcer/-/iron-a11y-announcer-3.0.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/@vaadin/vaadin-core-shrinkwrap",
    "/@vaadin/vaadin-core-shrinkwrap/@vaadin/vaadin-combo-box",
    "/@vaadin/vaadin-core-shrinkwrap/@vaadin/vaadin-date-picker",
    "/@vaadin/vaadin-core-shrinkwrap/@vaadin/vaadin-grid"
  ],
  "_resolved": "https://registry.npmjs.org/@polymer/iron-a11y-announcer/-/iron-a11y-announcer-3.0.2.tgz",
  "_shasum": "730dd36ccb2e042ecd5160ba439c2bf2f8a97412",
  "_shrinkwrap": null,
  "_spec": "@polymer/iron-a11y-announcer@https://registry.npmjs.org/@polymer/iron-a11y-announcer/-/iron-a11y-announcer-3.0.2.tgz",
  "_where": "C:\\Users\\kazav\\Documents\\GitHub\\gs-crud-with-vaadin\\complete\\node_modules\\@vaadin\\vaadin-core-shrinkwrap",
  "author": {
    "name": "The Polymer Authors"
  },
  "bugs": {
    "url": "https://github.com/PolymerElements/iron-a11y-announcer/issues"
  },
  "dependencies": {
    "@polymer/polymer": "^3.0.0"
  },
  "description": "A singleton element that simplifies announcing text to screen readers.",
  "devDependencies": {
    "@polymer/gen-typescript-declarations": "^1.5.1",
    "@polymer/iron-demo-helpers": "^3.0.1",
    "@polymer/iron-test-helpers": "^3.0.0-pre.26",
    "@polymer/paper-button": "^3.0.0-pre.26",
    "@polymer/test-fixture": "^4.0.1",
    "@webcomponents/webcomponentsjs": "^2.0.0",
    "wct-browser-legacy": "^1.0.1",
    "webmat": "^0.2.0"
  },
  "homepage": "https://github.com/PolymerElements/iron-a11y-announcer#readme",
  "keywords": [
    "web-components",
    "polymer",
    "a11y",
    "live"
  ],
  "license": "BSD-3-Clause",
  "main": "iron-a11y-announcer.js",
  "name": "@polymer/iron-a11y-announcer",
  "optionalDependencies": {},
  "readme": "\n<!---\n\nThis README is automatically generated from the comments in these files:\niron-a11y-announcer.html\n\nEdit those files, and our readme bot will duplicate them over here!\nEdit this file, and the bot will squash your changes :)\n\nThe bot does some handling of markdown. Please file a bug if it does the wrong\nthing! https://github.com/PolymerLabs/tedium/issues\n\n-->\n[![Published on NPM](https://img.shields.io/npm/v/@polymer/iron-a11y-announcer.svg)](https://www.npmjs.com/package/@polymer/iron-a11y-announcer)\n[![Build status](https://travis-ci.org/PolymerElements/iron-a11y-announcer.svg?branch=master)](https://travis-ci.org/PolymerElements/iron-a11y-announcer)\n[![Published on webcomponents.org](https://img.shields.io/badge/webcomponents.org-published-blue.svg)](https://webcomponents.org/element/@polymer/iron-a11y-announcer)\n\n## &lt;iron-a11y-announcer&gt;\n\n`iron-a11y-announcer` is a singleton element that is intended to add a11y\nto features that require on-demand announcement from screen readers. In\norder to make use of the announcer, it is best to request its availability\nin the announcing element.\nNote: announcements are only audible if you have a screen reader enabled.\n\nSee: [Documentation](https://www.webcomponents.org/element/@polymer/iron-a11y-announcer),\n  [Demo](https://www.webcomponents.org/element/@polymer/iron-a11y-announcer/demo/demo/index.html)\n\n## Usage\n\n### Installation\n```\nnpm install --save @polymer/iron-a11y-announcer\n```\n\n### In an html file\n```html\n<html>\n  <head>\n    <script type=\"module\">\n      import {IronA11yAnnouncer} from '@polymer/iron-a11y-announcer/iron-a11y-announcer.js';\n      // Initialize the announcer.\n      IronA11yAnnouncer.requestAvailability();\n\n      // Note: announcements are only audible if you have a screen reader enabled.\n      IronA11yAnnouncer.instance.fire('iron-announce',\n          {text: 'Hello there!'}, {bubbles: true});\n    </script>\n  </head>\n</html>\n```\n\n### In a Polymer 3 element\n```js\nimport {PolymerElement, html} from '@polymer/polymer';\nimport {IronA11yAnnouncer} from '@polymer/iron-a11y-announcer/iron-a11y-announcer.js';\n\nclass SampleElement extends PolymerElement {\n  static get template() {\n    return html`\n      <button on-click=\"announce\">Announce</button>\n    `;\n  }\n  function attached() {\n    IronA11yAnnouncer.requestAvailability();\n  }\n\n  // After the `iron-a11y-announcer` has been made available, elements can\n  // make announces by firing bubbling `iron-announce` events.\n  // Note: announcements are only audible if you have a screen reader enabled.\n  function announce() {\n    IronA11yAnnouncer.instance.fire('iron-announce',\n        {text: 'Hello there!'}, {bubbles: true});\n  }\n}\ncustomElements.define('sample-element', SampleElement);\n```\n\n## Contributing\nIf you want to send a PR to this element, here are\nthe instructions for running the tests and demo locally:\n\n### Installation\n```sh\ngit clone https://github.com/PolymerElements/iron-a11y-announcer\ncd iron-a11y-announcer\nnpm install\nnpm install -g polymer-cli\n```\n\n### Running the demo locally\n```sh\npolymer serve --npm\nopen http://127.0.0.1:<port>/demo/\n```\n\n### Running the tests\n```sh\npolymer test --npm\n```\n\n## Known Issues\nThis element doesn't work on Firefox (it doesn't read anything in Voice Over), since\n`aria-live` has been broken since the Quantum redesign (see the [MDN docs demo](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions))\n-- we tested it on Firefox 60, but it doesn't look like a regression, so\nit's probably broken on older versions as well.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/PolymerElements/iron-a11y-announcer.git"
  },
  "scripts": {
    "format": "webmat",
    "generate-types": "gen-typescript-declarations --deleteExisting --outDir . --verify",
    "prepare": "npm run generate-types"
  },
  "version": "3.0.2"
}
