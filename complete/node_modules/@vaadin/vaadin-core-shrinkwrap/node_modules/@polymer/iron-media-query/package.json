{
  "_args": [
    [
      {
        "raw": "@polymer/iron-media-query@https://registry.npmjs.org/@polymer/iron-media-query/-/iron-media-query-3.0.1.tgz",
        "scope": "@polymer",
        "escapedName": "@polymer%2firon-media-query",
        "name": "@polymer/iron-media-query",
        "rawSpec": "https://registry.npmjs.org/@polymer/iron-media-query/-/iron-media-query-3.0.1.tgz",
        "spec": "https://registry.npmjs.org/@polymer/iron-media-query/-/iron-media-query-3.0.1.tgz",
        "type": "remote"
      },
      "C:\\Users\\kazav\\Documents\\GitHub\\gs-crud-with-vaadin\\complete\\node_modules\\@vaadin\\vaadin-core-shrinkwrap"
    ]
  ],
  "_from": "@polymer/iron-media-query@https://registry.npmjs.org/@polymer/iron-media-query/-/iron-media-query-3.0.1.tgz",
  "_id": "@polymer/iron-media-query@3.0.1",
  "_inCache": true,
  "_location": "/@vaadin/vaadin-core-shrinkwrap/@polymer/iron-media-query",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@polymer/iron-media-query@https://registry.npmjs.org/@polymer/iron-media-query/-/iron-media-query-3.0.1.tgz",
    "scope": "@polymer",
    "escapedName": "@polymer%2firon-media-query",
    "name": "@polymer/iron-media-query",
    "rawSpec": "https://registry.npmjs.org/@polymer/iron-media-query/-/iron-media-query-3.0.1.tgz",
    "spec": "https://registry.npmjs.org/@polymer/iron-media-query/-/iron-media-query-3.0.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/@vaadin/vaadin-core-shrinkwrap",
    "/@vaadin/vaadin-core-shrinkwrap/@vaadin/vaadin-context-menu",
    "/@vaadin/vaadin-core-shrinkwrap/@vaadin/vaadin-date-picker",
    "/@vaadin/vaadin-core-shrinkwrap/@vaadin/vaadin-select"
  ],
  "_resolved": "https://registry.npmjs.org/@polymer/iron-media-query/-/iron-media-query-3.0.1.tgz",
  "_shasum": "5cd8a1c1e8c9b8bafd3dd5da14e0f8d2cfa76d83",
  "_shrinkwrap": null,
  "_spec": "@polymer/iron-media-query@https://registry.npmjs.org/@polymer/iron-media-query/-/iron-media-query-3.0.1.tgz",
  "_where": "C:\\Users\\kazav\\Documents\\GitHub\\gs-crud-with-vaadin\\complete\\node_modules\\@vaadin\\vaadin-core-shrinkwrap",
  "author": {
    "name": "The Polymer Authors"
  },
  "bugs": {
    "url": "https://github.com/PolymerElements/iron-media-query/issues"
  },
  "dependencies": {
    "@polymer/polymer": "^3.0.0"
  },
  "description": "Lets you bind to a CSS media query",
  "devDependencies": {
    "@polymer/gen-typescript-declarations": "^1.5.1",
    "@polymer/paper-styles": "^3.0.0-pre.26",
    "@webcomponents/webcomponentsjs": "^2.0.0",
    "wct-browser-legacy": "^1.0.1",
    "webmat": "^0.2.0"
  },
  "homepage": "https://github.com/PolymerElements/iron-media-query",
  "keywords": [
    "web-components",
    "polymer",
    "media"
  ],
  "license": "BSD-3-Clause",
  "main": "iron-media-query.js",
  "name": "@polymer/iron-media-query",
  "optionalDependencies": {},
  "readme": "[![Published on NPM](https://img.shields.io/npm/v/@polymer/iron-media-query.svg)](https://www.npmjs.com/package/@polymer/iron-media-query)\n[![Build status](https://travis-ci.org/PolymerElements/iron-media-query.svg?branch=master)](https://travis-ci.org/PolymerElements/iron-media-query)\n[![Published on webcomponents.org](https://img.shields.io/badge/webcomponents.org-published-blue.svg)](https://webcomponents.org/element/@polymer/iron-media-query)\n\n## &lt;iron-media-query&gt;\n`iron-media-query` can be used to data bind to a CSS media query.\nThe `query` property is a bare CSS media query.\nThe `query-matches` property is a boolean representing whether the page matches that media query.\n\nSee: [Documentation](https://www.webcomponents.org/element/@polymer/iron-media-query),\n  [Demo](https://www.webcomponents.org/element/@polymer/iron-media-query/demo/demo/index.html).\n\n## Usage\n\n### Installation\n```\nnpm install --save @polymer/iron-media-query\n```\n\n### In an html file\n```html\n<html>\n  <head>\n    <script type=\"module\">\n      import '@polymer/iron-media-query/iron-media-query.js';\n    </script>\n  </head>\n  <body>\n    <iron-media-query query=\"(min-width: 600px)\"></iron-media-query>\n  </body>\n</html>\n```\n### In a Polymer 3 element\n```js\nimport {PolymerElement, html} from '@polymer/polymer';\nimport '@polymer/iron-media-query/iron-media-query.js';\n\nclass SampleElement extends PolymerElement {\n  static get template() {\n    return html`\n      <iron-media-query query=\"(min-width: 600px)\"></iron-media-query>\n    `;\n  }\n}\ncustomElements.define('sample-element', SampleElement);\n```\n\n## Contributing\nIf you want to send a PR to this element, here are\nthe instructions for running the tests and demo locally:\n\n### Installation\n```sh\ngit clone https://github.com/PolymerElements/iron-media-query\ncd iron-media-query\nnpm install\nnpm install -g polymer-cli\n```\n\n### Running the demo locally\n```sh\npolymer serve --npm\nopen http://127.0.0.1:<port>/demo/\n```\n\n### Running the tests\n```sh\npolymer test --npm\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/PolymerElements/iron-media-query.git"
  },
  "scripts": {
    "format": "webmat",
    "generate-types": "gen-typescript-declarations --deleteExisting --outDir . --verify",
    "prepare": "npm run generate-types"
  },
  "version": "3.0.1"
}
